// What is Sass?
// Sass stands for Syntactically Awesome Style Sheet
// Sass is an extension to CSS
// Sass is a CSS pre-processor
// Sass is completely compatible with all versions of CSS
// Sass reduces repetition of CSS and therefore saves time
// Sass was designed by Hampton Catlin and developed by Natalie Weizenbaum in 2006
// Sass is free to download and use


/* Define standard variables and values for website */
        $backgroundColor: lightblue;
        $textColor: darkblue;
        $fontSize: 18px;
        $myFont: Helvetica, sans-serif;

/* Use the variables */
        body {
        background-color: $backgroundColor;
        color: $textColor;
        font-size: $fontSize;
        font-family: $myFont;
        }


// The default behavior for variable scope can be overridden by using the !global switch.

        $myColor: red;

        h1 {
        $myColor: green !global;
        color: $myColor;
        }

        p {
        color: $myColor;
        }


// Sass lets you nest CSS selectors in the same way as HTML.

        nav {
            ul {
              margin: 0;
              padding: 0;
              list-style: none;
            }
            li {
              display: inline-block;
            }
            a {
              display: block;
              padding: 6px 12px;
              text-decoration: none;
            }
          }

// Many CSS properties have the same prefix, like font-family, font-size and font-weight or text-align, text-transform and text-overflow.
// With Sass you can write them as nested properties:
p {
    font: {
      family: Helvetica, sans-serif;
      size: 18px;
      weight: bold;
    }
  
    text: {
      align: center;
      transform: lowercase;
      overflow: hidden;
    }  
}


// The @import directive allows you to include the content of one file in another.
// It is normal to add the @import directive at the top of a file; this way its content will have a global scope
    
    @import "filename";
    @import "variables";
    @import "colors";
    @import "reset";


// By default, Sass transpiles all the .scss files directly. However, when you want to import a file, you do not need the file to be transpiled directly.
// Sass has a mechanism for this: If you start the filename with an underscore, Sass will not transpile it. Files named this way are called partials in Sass.    
// So, a partial Sass file is named with a leading underscore:

// The following example shows a partial Sass file named "_colors.scss". (This file will not be transpiled directly to "colors.css"):

    // _colors.scss

    $myPink: #EE82EE;
    $myBlue: #4169E1;
    $myGreen: #8FBC8F;

// Now, if you import the partial file, omit the underscore. Sass understands that it should import the file "_colors.scss":

    @import "colors";

    body {
    font-family: Helvetica, sans-serif;
    font-size: 18px;
    color: $myBlue;
    }


// The @mixin directive lets you create CSS code that is to be reused throughout the website.
// The @include directive is created to let you use (include) the mixin.

    // SYNTAX
    @mixin name {
        property: value;
        property: value;
    }

    selector {
        @include mixin-name;
    }
    // SYNTAX

    // EXAMPLE
    @mixin important-text {
        color: red;
        font-size: 25px;
        font-weight: bold;
        border: 1px solid blue;
    }

    .danger {
        @include important-text;
        background-color: green;
    }
    // EXAMPLE

// A mixin can also include other mixins:

    @mixin special-text {
        @include important-text;
        @include link;
        @include special-border;
    }
